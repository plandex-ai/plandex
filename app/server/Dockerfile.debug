ARG GO_VERSION=1.23.3
FROM golang:${GO_VERSION}-alpine AS builder

RUN apk add --no-cache git gcc g++ ca-certificates

WORKDIR /app

# Copy go.mod and go.sum for shared and server, and install dependencies
COPY ./shared/go.mod ./shared/go.sum ./shared/
RUN cd shared && go mod download

COPY ./server/go.mod ./server/go.sum ./server/
RUN cd server && go mod download

# Copy the actual source code
COPY ./server ./server
COPY ./shared ./shared
COPY ./scripts /scripts

# Set working directory to server
WORKDIR /app/server

# Compile statically linked executable
RUN CGO_ENABLED=1 go build --ldflags '-linkmode external -extldflags "-static -s -w"' -o plandex-server .

# Create default user with uid 10001
RUN echo 'plandex:x:10001:10001:Plandex User,,,:/home/plandex:/bin/sh' > /tmp/passwd

# To support running as any user, writable directories and files must be owned by the root group with group RW permissions.
# Plandex wtites to /tmp and PLANDEX_BASE_DIR (default /plandex-server)
# We create those folders in build stage with correct permissions, then copy in the next stage
RUN mkdir -p /tmp/copy/tmp/ && chmod -R 777 /tmp/copy/tmp &&\
    mkdir -p /tmp/copy/plandex-server/ && chmod -R 770 /tmp/copy/plandex-server &&\
    chown -R 10001:0 /tmp/copy/plandex-server

FROM scratch

COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy shell and other common utils for debug image
COPY --from=builder /bin/sh /bin/sh
COPY --from=builder /bin/chown /bin/chown
COPY --from=builder /bin/mkdir /bin/mkdir
COPY --from=builder /bin/cat /bin/cat
COPY --from=builder /bin/ls /bin/ls
COPY --from=builder /bin/echo /bin/echo
COPY --from=builder /usr/bin/id /bin/id

# Shared libraries needed for Git binary
COPY --from=builder /lib/ld-musl-*.so.1 /lib/
COPY --from=builder /lib/libz.so.1 /lib/
COPY --from=builder /usr/lib/libpcre2-*.so.0 /lib/

COPY --from=builder /usr/bin/git /usr/bin/git

COPY --from=builder /tmp/passwd /etc/passwd
USER plandex

WORKDIR /home/plandex

COPY --from=builder /app/server/plandex-server /usr/bin/plandex-server
COPY --from=builder /app/server/migrations /home/plandex/migrations/

COPY --from=builder /tmp/copy /

ENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
ENV MIGRATIONS_DIR=/home/plandex/migrations
ENV PORT=8099
EXPOSE 8099

ENTRYPOINT ["sh", "-c"]
CMD ["plandex-server"]
